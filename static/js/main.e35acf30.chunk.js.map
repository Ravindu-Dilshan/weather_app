{"version":3,"sources":["components/input.comp.js","components/weather.comp.js","components/error.comp.js","App.js","reportWebVitals.js","index.js"],"names":["Input","className","type","placeholder","onChange","e","props","setQuery","target","value","this","query","onKeyPress","search","Component","Weather","rise","Date","sunrise","set","sunset","time","state","toLocaleTimeString","toDateString","getWeatherIcon","icon","city","country","desc","src","temp","wind","humid","pressure","cloud","id","Error","role","message","api","App","useState","weather","setWeather","location","setlocation","useEffect","navigator","geolocation","getCurrentPosition","showPosition","showPositionError","position","fetch","coords","latitude","longitude","then","res","json","result","console","log","error","alert","main","event","key","name","sys","humidity","speed","clouds","all","description","dt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e35acf30.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"pt-3 m-auto form col-md-5\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter a City Name\"\r\n          onChange={(e) => this.props.setQuery(e.target.value)}\r\n          value={this.props.query}\r\n          onKeyPress={this.props.search}\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Weather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const rise = new Date(this.props.sunrise * 1e3);\r\n    const set = new Date(this.props.sunset * 1e3);\r\n    const time = new Date(this.props.time * 1e3);\r\n\r\n    this.state = {\r\n      sunrise: rise.toLocaleTimeString(),\r\n      sunset: set.toLocaleTimeString(),\r\n      time: time.toDateString(),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-12 text-white px-2\">\r\n        <div className=\"card mx-auto weather-card\">\r\n          <span className=\"icon\">{getWeatherIcon(this.props.icon)}</span>\r\n          <div className=\"weather-name\">\r\n            {this.props.city}, {this.props.country}\r\n          </div>\r\n          <div>\r\n            {this.props.type} ({this.props.desc})\r\n          </div>\r\n          <div>{this.state.time}</div>\r\n          <div className=\"flex-grow-1\">\r\n            <table className=\"mx-auto w-50 my-3 p-2\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    {/*<img src=\"https://img.icons8.com/windows/32/ffffff/temperature-low.png\" />*/}\r\n                    <img src=\"./data-icons/temperature-low.png\" />\r\n                  </td>\r\n                  <td>{this.props.temp}&nbsp;Â°C</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    {/*<img src=\"https://img.icons8.com/material-rounded/24/ffffff/wind.png\" />*/}\r\n                    <img src=\"./data-icons/wind.png\" />\r\n                  </td>\r\n                  <td>{this.props.wind}&nbsp;m/s</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    {/*<img src=\"https://img.icons8.com/android/24/ffffff/humidity.png\" />*/}\r\n                    <img src=\"./data-icons/humidity.png\" />\r\n                  </td>\r\n                  <td>{this.props.humid}&nbsp;%</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    {/*<img src=\"https://img.icons8.com/material-sharp/24/ffffff/air-instrumentation.png\" />*/}\r\n                    <img src=\"./data-icons/air-instrumentation.png\" />\r\n                  </td>\r\n                  <td>{this.props.pressure}&nbsp;hPa</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    {/*<img src=\"https://img.icons8.com/ios-filled/32/ffffff/sky.png\" />/*/}\r\n                    <img src=\"./data-icons/sky.png\" />\r\n                  </td>\r\n                  <td>{this.props.cloud}&nbsp;%</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              {/*<img src=\"https://img.icons8.com/metro/32/ffffff/sunrise.png\" />*/}\r\n              <img src=\"./data-icons/sunrise.png\" />\r\n              <span>&ensp;{this.state.sunrise}</span>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              {/*<img src=\"https://img.icons8.com/metro/32/ffffff/sunset.png\" />*/}\r\n              <img src=\"./data-icons/sunset.png\" />\r\n              <span>&ensp;{this.state.sunset}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Weather;\r\n\r\nfunction getWeatherIcon(id) {\r\n  if (id >= 200 && id <= 232) {\r\n    return <img src=\"./weather-icons/lighting.png\" /> /*lighting*/;\r\n  } else if (id >= 300 && id <= 321) {\r\n    return <img src=\"./weather-icons/drizzel.png\" />; /*drizzel*/\r\n  } else if (id >= 500 && id <= 531) {\r\n    return <img src=\"./weather-icons/rain.png\" />; /*rain*/\r\n  } else if (id >= 600 && id <= 622) {\r\n    return <img src=\"./weather-icons/snow.png\" />; /*snow*/\r\n  } else if (id >= 701 && id <= 781) {\r\n    return <img src=\"./weather-icons/wind.png\" />; /*wind*/\r\n  } else if (id >= 801 && id <= 804) {\r\n    return <img src=\"./weather-icons/cloud.png\" /> /*cloud*/;\r\n  } else if (id == 800) {\r\n    return <img src=\"./weather-icons/sun.png\" />; /*sun*/\r\n  } else {\r\n    return <p className=\"card-text\">ERROR</p>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Error extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-6 m-md-5 mt-5\">\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {this.props.message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default Error;\r\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Input from \"./components/input.comp\";\nimport Weather from \"./components/weather.comp\";\nimport Error from \"./components/error.comp\";\nimport \"./assets/weather.css\";\n\nconst api = {\n  key: \"5ae2fa59d57c156a946c3cd6ab22946e\",\n  url: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [location, setlocation] = useState(false);\n\n  useEffect(() => {\n    if (!location) {\n      navigator.geolocation.getCurrentPosition(showPosition, showPositionError);\n      setlocation(true);\n    }\n  }, []);\n\n  const showPosition = (position) => {\n    fetch(\n      `${api.url}/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${api.key}`\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        setWeather(result);\n        console.log(result);\n      });\n  };\n\n  const showPositionError = (error) => {\n    console.log(error);\n    alert(error.message);\n  };\n\n  const search = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.url}weather?q=${query}&units=metric&appid=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          console.log(result);\n        });\n    }\n  };\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? getWeatherIcon(weather.weather[0].id)\n          : \"App rain\"\n      }\n    >\n      <main>\n        <div>\n          <Input query={query} search={search} setQuery={setQuery} />\n          {typeof weather.message != \"undefined\" ? (\n            <Error message={weather.message} />\n          ) : (\n            \"\"\n          )}\n          {typeof weather.main != \"undefined\" ? (\n            <Weather\n              city={weather.name}\n              country={weather.sys.country}\n              temp={weather.main.temp}\n              humid={weather.main.humidity}\n              wind={weather.wind.speed}\n              pressure={weather.main.pressure}\n              cloud={weather.clouds.all}\n              desc={weather.weather[0].description}\n              type={weather.weather[0].main}\n              sunrise={weather.sys.sunrise}\n              sunset={weather.sys.sunset}\n              icon={weather.weather[0].id}\n              time={weather.dt}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction getWeatherIcon(id) {\n  if (id >= 200 && id <= 531) {\n    return \"App rain\";\n  } else if (id >= 600 && id <= 622) {\n    return \"App snow\";\n  } else if (id == 800) {\n    return \"App sun\";\n  } else if (id >= 701 && id <= 804) {\n    return \"App cloud\";\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}